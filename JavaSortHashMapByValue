Sorting HashMap by values in java

[Sorting HashMap by values in java](https://www.flowerbrackets.com/sorting-hashmap-by-values-in-java/)

sort hashmap by value java is one the common java interview question. In java we cannot directly sort HashMap by value.

Sorting a HashMap according to values can be done by writing our own Comparator which compares two elements based on values.

This comparator takes Map.entry object and orders in increasing or decreasing by value.

In the below java program first we are getting entries by calling entrySet() method of class Map. Here I have created sortByValue(hash) method which accepts entries as parameter.

Then in sortByValue() method, sort based on values using custom Comparator. In the next step convert set to a list.

Now using Collections.sort() method sort list by passing comparator value. Finally add entries in sorted order by creating LinkedHashMap.

In the below example agenda is to sort hashmap according to values, that is, units (car) sold.

import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
public class SortHashMapByValue
{
   public static void main(String[] args)
   {
      HashMap<String, Integer> hash = new HashMap<String, Integer>();
      hash.put("Toyota", 78);
      hash.put("Skoda", 69);
      hash.put("Honda", 93);
      hash.put("Audi", 59);
      hash.put("Chevrolet", 39);
      hash.put("Hyundai", 56);
      Map<String, Integer> map = sortByValue(hash);
      System.out.println("Sorting hashmap by values in java: ");
      // printing sorted HashMap
      for(Map.Entry<String, Integer> me : map.entrySet())
      {
         System.out.println("Key = " + me.getKey() + ", Value = " + me.getValue());
      }
   }
   public static HashMap<String, Integer> sortByValue(HashMap<String, Integer> hm)
   {
      // creating list from elements of HashMap
      List<Map.Entry<String, Integer>> list = new LinkedList<Map.Entry<String, Integer>>(hm.entrySet());
      // sorting list
      Collections.sort(list, new Comparator<Map.Entry<String, Integer>>()
      {
         public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2)
         {
            return (o1.getValue()).compareTo(o2.getValue());
         }
      });
      HashMap<String, Integer> ha = new LinkedHashMap<String, Integer>();
      for(Map.Entry<String, Integer> me : list)
      {
         ha.put(me.getKey(), me.getValue());
      }
      return ha;
   }
}
